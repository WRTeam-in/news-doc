"use strict";(self.webpackChunknews_app_documentation=self.webpackChunknews_app_documentation||[]).push([[518],{706:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/email_fcm1-e10d4f92438f760fca23d336e382761d.png"},3327:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/email_fcm4-4ff3d91cc34578ba314519240f036f21.png"},4672:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/email_fcm3-898dbf9110db39f6f0d6cd34385d755b.png"},5849:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/email_fcm2-833d66549047591a70ded81602fefa8d.png"},5952:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"app/email-fcm","title":"Authenticate with Firebase Using Email and Password","description":"To enable email and password authentication in your News App, follow these steps:","source":"@site/docs/app/email-fcm.md","sourceDirName":"app","slug":"/app/email-fcm","permalink":"/news-doc/docs/app/email-fcm","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"tutorialSidebar","previous":{"title":"How to Create Firebase Project for Android and iOS","permalink":"/news-doc/docs/app/create-fcm"},"next":{"title":"Authenticate with Firebase Using Google Sign-In","permalink":"/news-doc/docs/app/google-fcm"}}');var a=i(4848),t=i(8453);const r={sidebar_position:11},o="Authenticate with Firebase Using Email and Password",l={},d=[{value:"Configure Your App",id:"configure-your-app",level:2},{value:"Implementation Example",id:"implementation-example",level:2}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"authenticate-with-firebase-using-email-and-password",children:"Authenticate with Firebase Using Email and Password"})}),"\n",(0,a.jsx)(n.p,{children:"To enable email and password authentication in your News App, follow these steps:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Open your Firebase console."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Navigate to Authentication and select the Sign-in method tab."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:'Find Email/Password authentication method and enable it. You should enable both "Allow users to sign in with their email and password" and "Email link (passwordless sign-in)" options.'}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Enable Email Authentication",src:i(706).A+"",width:"1558",height:"564"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Email Authentication Settings",src:i(5849).A+"",width:"1537",height:"694"})}),"\n",(0,a.jsx)(n.p,{children:"After pressing the save button, email authentication will be enabled in your app."}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"You can customize the sender name and subject for verify email and reset password messages:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Email Sender Name",src:i(4672).A+"",width:"1559",height:"711"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Email Templates",src:i(3327).A+"",width:"1613",height:"954"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"With these settings in place, users will be able to register and log into your News App using their email and password."}),"\n",(0,a.jsx)(n.h2,{id:"configure-your-app",children:"Configure Your App"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Make sure you have added the Firebase Auth dependency in ",(0,a.jsx)(n.code,{children:"pubspec.yaml"}),":"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  firebase_auth: ^latest_version\n"})}),"\n",(0,a.jsxs)(n.ol,{start:"2",children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Run ",(0,a.jsx)(n.code,{children:"flutter pub get"})," to install the dependency"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Initialize Firebase in your app:"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"import 'package:firebase_core/firebase_core.dart';\nimport 'package:firebase_auth/firebase_auth.dart';\n\nvoid main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  await Firebase.initializeApp();\n  runApp(MyApp());\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"implementation-example",children:"Implementation Example"}),"\n",(0,a.jsx)(n.p,{children:"Here's a simple example of how to implement email/password authentication in your app:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-dart",children:"// Sign up a new user\nFuture<UserCredential> signUp(String email, String password) async {\n  try {\n    return await FirebaseAuth.instance.createUserWithEmailAndPassword(\n      email: email,\n      password: password,\n    );\n  } catch (e) {\n    print('Error during sign up: $e');\n    rethrow;\n  }\n}\n\n// Sign in an existing user\nFuture<UserCredential> signIn(String email, String password) async {\n  try {\n    return await FirebaseAuth.instance.signInWithEmailAndPassword(\n      email: email,\n      password: password,\n    );\n  } catch (e) {\n    print('Error during sign in: $e');\n    rethrow;\n  }\n}\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"Always handle authentication errors properly and show appropriate error messages to users."})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);